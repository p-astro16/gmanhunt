// All of this is shared code
// there will be issues if you dont make your file shared

// note make sure you place this in the directory lua>nexus_library>modules so that it preloads before your addon

Nexus:GetValue(id) // default false: returns the data
Nexus:SetValue(id, value) // set the id of a value *note this doesnt gets networked unless defined by function below*

Nexus.Builder:Start() // Use this to define the start of your addon
    :SetName("Leaderboards") // Set the name of the tab

    :AddLabel({text = "Just a label"}) // Just a label

    // One or more functionable buttons
    :AddButtons({
        id = "nexus-example-buttonRow", // The id to use when doing Nexus:GetValue(id)
        defaultValue = 1, // The default value for Nexus:GetValue(id)
        // if showSelected is true then the button with the same value of this will get highlighted

        dontNetwork = false, // Set to true so things such as db details dont get networked

        showSelected = false, // Override the button colours to show the currently selected button

        label = "Button Row", // The title of this element
        buttons = {
            // The text inside the button and the value to store with it (either string or number)
            // colors is an optional extra
            {text = "Button #1", value = 1},
            {text = "Button #2", value = 2, color = Nexus.Colors.Secondary},
            {text = "Button #3", value = 3, color = Nexus.Colors.Green},
            {text = "Long Button #4", value = 4, color = Nexus.Colors.Red},
        },
        onChange = function(value)
            print("Value has been changed", value)
        end,
    })

    // A row with a single text entry
    :AddTextEntry({
        id = "nexus-example-textEntry", // The id to use when doing Nexus:GetValue(id)
        defaultValue = 20, // The default value for Nexus:GetValue(id)
        dontNetwork = false, // set to true so things such as db details dont get networked

        label = "Text Entry", // The title of this element
        placeholder = "Hello", // The placeholder inside the textentry
        isNumeric = true, // Should the textentry be numeric

        onChange = function(value)
            print("Value has been changed", value)
        end,
    })

    // A row with multiple text entry boxes
    :AddMultiTextEntry({
        id = "nexus-example-multiTextEntry", // The id to use when doing Nexus:GetValue(id)
        dontNetwork = false, // set to true so things such as db details dont get networked

        label = "Text Multi Entry", // The title of this element
        entries = {
            // The id is what will get put into the value
            // example
            // Nexus:GetValue("nexus-example-multiTextEntry")["host"]
            {id = "host", default = "", placeholder = "host", isNumeric = false},
            {id = "port", default = 0, placeholder = "port", isNumeric = true},
            {id = "username", default = "", placeholder = "username", isNumeric = false},
            {id = "password", default = "", placeholder = "password", isNumeric = false},
            {id = "db", default = "", placeholder = "database name", isNumeric = false},
        },

        onChange = function(value)
            print("Value has been changed")
            PrintTable(value)
            // Prints it in a key = value format
            // ["password"] = ""
        end,
    })

    // An advanced table input
    :AddTable({
        id = "nexus-example-table", // The id to use when doing Nexus:GetValue(id)
        dontNetwork = false, // set to true so things such as db details dont get networked
        defaultValue = {}, // The default value for Nexus:GetValue(id) * preferably dont edit this one unless you know what youre doing
        
        // default false: Add a ["Chance"] value and auto format the chances to add up to 100%
        // *note* it only reforms the data to add upto 100% on the client
        isPercentage = false,

        label = "Text Multi Entry", // The title of this element

        // The different types of inputs you can have
        values = {
            // The id is what will get put into the value
            // example
            // Nexus:GetValue("nexus-example-multiTextEntry")[1]["Name"]
            {id = "Name", type = "TextEntry", placeholder = "Name", isNumeric = false},
            {id = "Money", type = "TextEntry", placeholder = "Money", isNumeric = true},
            {id = "IsEnabled", type = "CheckBox", placeholder = "Premium pass"},
            {id = "FavFood", type = "ComboBox", placeholder = "Favourite Food", values = {"Pizza", "Lemon"}}, // values can be a function eg function() return {"Hello", "Test"} end
        },

        onChange = function(value)
            print("Value has been changed")
            PrintTable(value)
        end,
    })

    // A key = value format table
    :AddKeyTable({
        id = "nexus-example-chatCommands", // The id to use when doing Nexus:GetValue(id)
        dontNetwork = false, // set to true so things such as db details dont get networked
        defaultValue = { // The default value for Nexus:GetValue(id)
            ["!chatPrint"] = true,
            // make sure this follows the ["Key"] = true, format
        },

        label = "Text Multi Entry", // The title of this element

        placeholder = "Suit Name", // Placeholder of the entry
        isNumeric = false, // Should the text entry be numeric

        onChange = function(value)
            print("Value has been changed")
            PrintTable(value)
        end,
    })
:End()